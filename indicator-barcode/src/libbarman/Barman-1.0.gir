<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GLib" version="2.0"/>
  <include name="GObject" version="2.0"/>
  <include name="Gio" version="2.0"/>
  <namespace name="Barman"
             version="1.0"
             shared-library=""
             c:identifier-prefixes="Barman"
             c:symbol-prefixes="barman">
    <class name="IPv4"
           c:symbol-prefix="ipv4"
           c:type="BarmanIPv4"
           parent="GObject.Object"
           glib:type-name="BarmanIPv4"
           glib:get-type="barman_ipv4_get_type"
           glib:type-struct="IPv4Class">
      <constructor name="new" c:identifier="barman_ipv4_new" throws="1">
        <return-value transfer-ownership="full">
          <type name="IPv4" c:type="BarmanIPv4*"/>
        </return-value>
        <parameters>
          <parameter name="method" transfer-ownership="none">
            <type name="IPv4Method" c:type="BarmanIPv4Method"/>
          </parameter>
          <parameter name="address" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="netmask" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="gateway" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_strings"
                   c:identifier="barman_ipv4_new_with_strings"
                   throws="1">
        <return-value transfer-ownership="full">
          <type name="IPv4" c:type="BarmanIPv4*"/>
        </return-value>
        <parameters>
          <parameter name="method" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="address" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="netmask" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="gateway" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_address" c:identifier="barman_ipv4_get_address">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_gateway" c:identifier="barman_ipv4_get_gateway">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_method" c:identifier="barman_ipv4_get_method">
        <return-value transfer-ownership="none">
          <type name="IPv4Method" c:type="BarmanIPv4Method"/>
        </return-value>
      </method>
      <method name="get_method_as_string"
              c:identifier="barman_ipv4_get_method_as_string">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_netmask" c:identifier="barman_ipv4_get_netmask">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <property name="address"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8"/>
      </property>
      <property name="gateway"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8"/>
      </property>
      <property name="method"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="guint"/>
      </property>
      <property name="netmask"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8"/>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="IPv4Class"
            c:type="BarmanIPv4Class"
            glib:is-gtype-struct-for="IPv4">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="IPv4Error" c:type="BarmanIPv4Error">
      <member name="method"
              value="0"
              c:identifier="BARMAN_IPV4_ERROR_INVALID_METHOD"/>
      <member name="settings"
              value="1"
              c:identifier="BARMAN_IPV4_ERROR_INVALID_SETTINGS"/>
    </enumeration>
    <enumeration name="IPv4Method" c:type="BarmanIPv4Method">
      <member name="off" value="0" c:identifier="BARMAN_IPV4_METHOD_OFF"/>
      <member name="manual"
              value="1"
              c:identifier="BARMAN_IPV4_METHOD_MANUAL"/>
      <member name="fixed" value="2" c:identifier="BARMAN_IPV4_METHOD_FIXED"/>
      <member name="dhcp" value="3" c:identifier="BARMAN_IPV4_METHOD_DHCP"/>
    </enumeration>
    <class name="IPv6"
           c:symbol-prefix="ipv6"
           c:type="BarmanIPv6"
           parent="GObject.Object"
           glib:type-name="BarmanIPv6"
           glib:get-type="barman_ipv6_get_type"
           glib:type-struct="IPv6Class">
      <constructor name="new" c:identifier="barman_ipv6_new" throws="1">
        <return-value transfer-ownership="full">
          <type name="IPv6" c:type="BarmanIPv6*"/>
        </return-value>
        <parameters>
          <parameter name="method" transfer-ownership="none">
            <type name="IPv6Method" c:type="BarmanIPv6Method"/>
          </parameter>
          <parameter name="address" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="prefix_length" transfer-ownership="none">
            <type name="guint8" c:type="guchar"/>
          </parameter>
          <parameter name="gateway" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_strings"
                   c:identifier="barman_ipv6_new_with_strings"
                   throws="1">
        <return-value transfer-ownership="full">
          <type name="IPv6" c:type="BarmanIPv6*"/>
        </return-value>
        <parameters>
          <parameter name="method" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="address" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="prefix_length" transfer-ownership="none">
            <type name="guint8" c:type="guchar"/>
          </parameter>
          <parameter name="gateway" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_address" c:identifier="barman_ipv6_get_address">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_gateway" c:identifier="barman_ipv6_get_gateway">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_method" c:identifier="barman_ipv6_get_method">
        <return-value transfer-ownership="none">
          <type name="IPv6Method" c:type="BarmanIPv6Method"/>
        </return-value>
      </method>
      <method name="get_method_as_string"
              c:identifier="barman_ipv6_get_method_as_string">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_prefix_length"
              c:identifier="barman_ipv6_get_prefix_length">
        <return-value transfer-ownership="none">
          <type name="guint8" c:type="guchar"/>
        </return-value>
      </method>
      <property name="address"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8"/>
      </property>
      <property name="gateway"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8"/>
      </property>
      <property name="method"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="guint"/>
      </property>
      <property name="prefix-length"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="guint8"/>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="IPv6Class"
            c:type="BarmanIPv6Class"
            glib:is-gtype-struct-for="IPv6">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="IPv6Error" c:type="BarmanIPv6Error">
      <member name="method"
              value="0"
              c:identifier="BARMAN_IPV6_ERROR_INVALID_METHOD"/>
      <member name="settings"
              value="1"
              c:identifier="BARMAN_IPV6_ERROR_INVALID_SETTINGS"/>
    </enumeration>
    <enumeration name="IPv6Method" c:type="BarmanIPv6Method">
      <member name="off" value="0" c:identifier="BARMAN_IPV6_METHOD_OFF"/>
      <member name="manual"
              value="1"
              c:identifier="BARMAN_IPV6_METHOD_MANUAL"/>
      <member name="fixed" value="2" c:identifier="BARMAN_IPV6_METHOD_FIXED"/>
      <member name="auto" value="3" c:identifier="BARMAN_IPV6_METHOD_AUTO"/>
    </enumeration>
    <constant name="MANAGER_PATH" value="/">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <class name="Manager"
           c:symbol-prefix="manager"
           c:type="BarmanManager"
           parent="GObject.Object"
           glib:type-name="BarmanManager"
           glib:get-type="barman_manager_get_type"
           glib:type-struct="ManagerClass">
      <constructor name="new" c:identifier="barman_manager_new">
        <return-value transfer-ownership="full">
          <type name="Manager" c:type="BarmanManager*"/>
        </return-value>
      </constructor>
      <method name="connect_service"
              c:identifier="barman_manager_connect_service">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="ServiceType" c:type="BarmanServiceType"/>
          </parameter>
          <parameter name="mode" transfer-ownership="none">
            <type name="ServiceMode" c:type="BarmanServiceMode"/>
          </parameter>
          <parameter name="security" transfer-ownership="none">
            <type name="ServiceSecurity" c:type="BarmanServiceSecurity"/>
          </parameter>
          <parameter name="ssid" transfer-ownership="none">
            <type name="guint8" c:type="guint8*"/>
          </parameter>
          <parameter name="ssid_len" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="7">
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect_service_finish"
              c:identifier="barman_manager_connect_service_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="disable_technology"
              c:identifier="barman_manager_disable_technology">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="TechnologyType" c:type="BarmanTechnologyType"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="3">
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="disable_technology_finish"
              c:identifier="barman_manager_disable_technology_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="enable_technology"
              c:identifier="barman_manager_enable_technology">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="TechnologyType" c:type="BarmanTechnologyType"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="3">
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="enable_technology_finish"
              c:identifier="barman_manager_enable_technology_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_bluetooth_state"
              c:identifier="barman_manager_get_bluetooth_state">
        <return-value transfer-ownership="none">
          <type name="TechnologyState" c:type="BarmanTechnologyState"/>
        </return-value>
      </method>
      <method name="get_cellular_state"
              c:identifier="barman_manager_get_cellular_state">
        <return-value transfer-ownership="none">
          <type name="TechnologyState" c:type="BarmanTechnologyState"/>
        </return-value>
      </method>
      <method name="get_connected" c:identifier="barman_manager_get_connected">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_default_service"
              c:identifier="barman_manager_get_default_service">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">The service or null if not found.</doc>
          <type name="Service" c:type="BarmanService*"/>
        </return-value>
      </method>
      <method name="get_ethernet_state"
              c:identifier="barman_manager_get_ethernet_state">
        <return-value transfer-ownership="none">
          <type name="TechnologyState" c:type="BarmanTechnologyState"/>
        </return-value>
      </method>
      <method name="get_offline_mode"
              c:identifier="barman_manager_get_offline_mode">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_service" c:identifier="barman_manager_get_service">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">The service or null if not found.</doc>
          <type name="Service" c:type="BarmanService*"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <doc xml:whitespace="preserve">path</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_services" c:identifier="barman_manager_get_services">
        <doc xml:whitespace="preserve">owned by BarmanManager. Caller must create a reference if it uses them.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">Null terminated list of services,</doc>
          <array c:type="BarmanService**">
            <type name="Service"/>
          </array>
        </return-value>
      </method>
      <method name="get_wifi_state"
              c:identifier="barman_manager_get_wifi_state">
        <return-value transfer-ownership="none">
          <type name="TechnologyState" c:type="BarmanTechnologyState"/>
        </return-value>
      </method>
      <method name="set_offline_mode"
              c:identifier="barman_manager_set_offline_mode">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="mode" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="bluetooth-state" transfer-ownership="none">
        <type name="guint"/>
      </property>
      <property name="cellular-state" transfer-ownership="none">
        <type name="guint"/>
      </property>
      <property name="connected" transfer-ownership="none">
        <type name="gboolean"/>
      </property>
      <property name="default-service" transfer-ownership="none">
        <type name="Service"/>
      </property>
      <property name="ethernet-state" transfer-ownership="none">
        <type name="guint"/>
      </property>
      <property name="offline-mode" writable="1" transfer-ownership="none">
        <type name="gboolean"/>
      </property>
      <property name="wifi-state" transfer-ownership="none">
        <type name="guint"/>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <glib:signal name="service-added">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Service"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="service-removed">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="ManagerClass"
            c:type="BarmanManagerClass"
            glib:is-gtype-struct-for="Manager">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <constant name="PATH" value="/org/moblin/barman">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PROPERTY_APN" value="APN">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PROPERTY_AUTOCONNECT" value="AutoConnect">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PROPERTY_DEFAULT_TECHNOLOGY" value="DefaultTechnology">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PROPERTY_DOMAINS" value="Domains">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PROPERTY_DOMAINS_CONFIGURATION"
              value="Domains.Configuration">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PROPERTY_ENABLED_TECHNOLOGIES" value="EnabledTechnologies">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PROPERTY_ERROR" value="Error">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PROPERTY_FAVORITE" value="Favorite">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PROPERTY_IMMUTABLE" value="Immutable">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PROPERTY_IPV4" value="IPv4">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PROPERTY_IPV4_CONFIGURATION" value="IPv4.Configuration">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PROPERTY_IPV6" value="IPv6">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PROPERTY_IPV6_CONFIGURATION" value="IPv6.Configuration">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PROPERTY_LOGIN_REQUIRED" value="LoginRequired">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PROPERTY_MCC" value="MCC">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PROPERTY_MNC" value="MNC">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PROPERTY_MODE" value="Mode">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PROPERTY_NAME" value="Name">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PROPERTY_NAMESERVERS" value="Nameservers">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PROPERTY_NAMESERVERS_CONFIGURATION"
              value="Nameservers.Configuration">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PROPERTY_OFFLINE_MODE" value="OfflineMode">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PROPERTY_PASSPHRASE" value="Passphrase">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PROPERTY_PASSPHRASE_REQUIRED" value="PassphraseRequired">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PROPERTY_ROAMING" value="Roaming">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PROPERTY_SECURITY" value="Security">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PROPERTY_SERVICES" value="Services">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PROPERTY_SETUP_REQUIRED" value="SetupRequired">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PROPERTY_STATE" value="State">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PROPERTY_STRENGTH" value="Strength">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PROPERTY_TECHNOLOGIES" value="Technologies">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PROPERTY_TYPE" value="Type">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_NONE" value="none">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_PSK" value="psk">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_RSN" value="rsn">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_WEP" value="wep">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_WPA" value="wpa">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SERVICE_NAME" value="net.barman">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SIGNAL_PROPERTY_CHANGED" value="PropertyChanged">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="STATE_CONNECTING" value="connecting">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="STATE_OFFLINE" value="offline">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="STATE_ONLINE" value="online">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <class name="Service"
           c:symbol-prefix="service"
           c:type="BarmanService"
           parent="GObject.Object"
           glib:type-name="BarmanService"
           glib:get-type="barman_service_get_type"
           glib:type-struct="ServiceClass">
      <constructor name="new" c:identifier="barman_service_new">
        <return-value transfer-ownership="full">
          <type name="Service" c:type="BarmanService*"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="mode2str" c:identifier="barman_service_mode2str">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="mode" transfer-ownership="none">
            <type name="ServiceMode" c:type="BarmanServiceMode"/>
          </parameter>
        </parameters>
      </function>
      <function name="security2str" c:identifier="barman_service_security2str">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="security" transfer-ownership="none">
            <type name="ServiceSecurity" c:type="BarmanServiceSecurity"/>
          </parameter>
        </parameters>
      </function>
      <function name="state2str" c:identifier="barman_service_state2str">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="state" transfer-ownership="none">
            <type name="ServiceState" c:type="BarmanServiceState"/>
          </parameter>
        </parameters>
      </function>
      <function name="str2mode" c:identifier="barman_service_str2mode">
        <return-value transfer-ownership="none">
          <type name="ServiceMode" c:type="BarmanServiceMode"/>
        </return-value>
        <parameters>
          <parameter name="mode" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="str2security" c:identifier="barman_service_str2security">
        <return-value transfer-ownership="none">
          <type name="ServiceSecurity" c:type="BarmanServiceSecurity"/>
        </return-value>
        <parameters>
          <parameter name="security" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="str2state" c:identifier="barman_service_str2state">
        <return-value transfer-ownership="none">
          <type name="ServiceState" c:type="BarmanServiceState"/>
        </return-value>
        <parameters>
          <parameter name="state" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="str2type" c:identifier="barman_service_str2type">
        <return-value transfer-ownership="none">
          <type name="ServiceType" c:type="BarmanServiceType"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="type2str" c:identifier="barman_service_type2str">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="ServiceType" c:type="BarmanServiceType"/>
          </parameter>
        </parameters>
      </function>
      <method name="connect" c:identifier="barman_service_connect">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="1">
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect_finish"
              c:identifier="barman_service_connect_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="disconnect" c:identifier="barman_service_disconnect">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="1">
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="disconnect_finish"
              c:identifier="barman_service_disconnect_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_apn" c:identifier="barman_service_get_apn">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_autoconnect"
              c:identifier="barman_service_get_autoconnect">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_domains" c:identifier="barman_service_get_domains">
        <doc xml:whitespace="preserve">owned by BarmanManager. Caller must copy if it uses them.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">Null terminated list of strings,</doc>
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
      </method>
      <method name="get_domains_configuration"
              c:identifier="barman_service_get_domains_configuration">
        <doc xml:whitespace="preserve">Null terminated list of strings, owned by BarmanService. Caller must
copy if it uses them.</doc>
        <return-value transfer-ownership="none">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
      </method>
      <method name="get_error" c:identifier="barman_service_get_error">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_favorite" c:identifier="barman_service_get_favorite">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_immutable" c:identifier="barman_service_get_immutable">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_ipv4" c:identifier="barman_service_get_ipv4">
        <doc xml:whitespace="preserve">take a reference.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">Current ipv4 settings. The caller must</doc>
          <type name="IPv4" c:type="BarmanIPv4*"/>
        </return-value>
      </method>
      <method name="get_ipv4_configuration"
              c:identifier="barman_service_get_ipv4_configuration">
        <doc xml:whitespace="preserve">take a reference.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">Current configured ipv4 settings. The caller must</doc>
          <type name="IPv4" c:type="BarmanIPv4*"/>
        </return-value>
      </method>
      <method name="get_ipv6" c:identifier="barman_service_get_ipv6">
        <doc xml:whitespace="preserve">take a reference.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">Current ipv6 settings. The caller must</doc>
          <type name="IPv6" c:type="BarmanIPv6*"/>
        </return-value>
      </method>
      <method name="get_ipv6_configuration"
              c:identifier="barman_service_get_ipv6_configuration">
        <doc xml:whitespace="preserve">take a reference.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">Current configured ipv6 settings. The caller must</doc>
          <type name="IPv6" c:type="BarmanIPv6*"/>
        </return-value>
      </method>
      <method name="get_login_required"
              c:identifier="barman_service_get_login_required">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_mcc" c:identifier="barman_service_get_mcc">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_mnc" c:identifier="barman_service_get_mnc">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_name" c:identifier="barman_service_get_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_nameservers"
              c:identifier="barman_service_get_nameservers">
        <doc xml:whitespace="preserve">Null terminated list of strings, owned by BarmanService. Caller must
copy if it uses them.</doc>
        <return-value transfer-ownership="none">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
      </method>
      <method name="get_nameservers_configuration"
              c:identifier="barman_service_get_nameservers_configuration">
        <doc xml:whitespace="preserve">Null terminated list of strings, owned by BarmanService. Caller must
copy if it uses them.</doc>
        <return-value transfer-ownership="none">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
      </method>
      <method name="get_passphrase"
              c:identifier="barman_service_get_passphrase">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_passphrase_required"
              c:identifier="barman_service_get_passphrase_required">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_path" c:identifier="barman_service_get_path">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_roaming" c:identifier="barman_service_get_roaming">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_security" c:identifier="barman_service_get_security">
        <return-value transfer-ownership="none">
          <type name="ServiceSecurity" c:type="BarmanServiceSecurity"/>
        </return-value>
      </method>
      <method name="get_service_type"
              c:identifier="barman_service_get_service_type">
        <return-value transfer-ownership="none">
          <type name="ServiceType" c:type="BarmanServiceType"/>
        </return-value>
      </method>
      <method name="get_setup_required"
              c:identifier="barman_service_get_setup_required">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_state" c:identifier="barman_service_get_state">
        <return-value transfer-ownership="none">
          <type name="ServiceState" c:type="BarmanServiceState"/>
        </return-value>
      </method>
      <method name="get_strength" c:identifier="barman_service_get_strength">
        <return-value transfer-ownership="none">
          <type name="guint8" c:type="guint8"/>
        </return-value>
      </method>
      <method name="is_ready" c:identifier="barman_service_is_ready">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_apn" c:identifier="barman_service_set_apn">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="apn" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_autoconnect"
              c:identifier="barman_service_set_autoconnect">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="autoconnect" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_domains_configuration"
              c:identifier="barman_service_set_domains_configuration">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="domains" transfer-ownership="none">
            <doc xml:whitespace="preserve">Null terminated list of strings, owned by caller.</doc>
            <array c:type="gchar**">
              <type name="utf8" c:type="gchar*"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="set_ipv4_configuration"
              c:identifier="barman_service_set_ipv4_configuration">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="ipv4" transfer-ownership="none">
            <type name="IPv4" c:type="BarmanIPv4*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_ipv6_configuration"
              c:identifier="barman_service_set_ipv6_configuration">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="ipv6" transfer-ownership="none">
            <type name="IPv6" c:type="BarmanIPv6*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_nameservers_configuration"
              c:identifier="barman_service_set_nameservers_configuration">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="nameservers" transfer-ownership="none">
            <doc xml:whitespace="preserve">Null terminated list of strings, owned by caller.</doc>
            <array c:type="gchar**">
              <type name="utf8" c:type="gchar*"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="set_passphrase"
              c:identifier="barman_service_set_passphrase">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="passphrase" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="apn" writable="1" transfer-ownership="none">
        <type name="utf8"/>
      </property>
      <property name="autoconnect" writable="1" transfer-ownership="none">
        <type name="gboolean"/>
      </property>
      <property name="domains" transfer-ownership="none">
        <array>
          <type name="utf8"/>
        </array>
      </property>
      <property name="domains-configuration"
                writable="1"
                transfer-ownership="none">
        <array>
          <type name="utf8"/>
        </array>
      </property>
      <property name="error" transfer-ownership="none">
        <type name="utf8"/>
      </property>
      <property name="favorite" transfer-ownership="none">
        <type name="gboolean"/>
      </property>
      <property name="immutable" transfer-ownership="none">
        <type name="gboolean"/>
      </property>
      <property name="ipv4" transfer-ownership="none">
        <type name="IPv4"/>
      </property>
      <property name="ipv4-configuration"
                writable="1"
                transfer-ownership="none">
        <type name="IPv4"/>
      </property>
      <property name="ipv6" transfer-ownership="none">
        <type name="IPv6"/>
      </property>
      <property name="ipv6-configuration"
                writable="1"
                transfer-ownership="none">
        <type name="IPv6"/>
      </property>
      <property name="login-required" transfer-ownership="none">
        <type name="gboolean"/>
      </property>
      <property name="mcc" transfer-ownership="none">
        <type name="utf8"/>
      </property>
      <property name="mnc" transfer-ownership="none">
        <type name="utf8"/>
      </property>
      <property name="mode" transfer-ownership="none">
        <type name="guint"/>
      </property>
      <property name="name" transfer-ownership="none">
        <type name="utf8"/>
      </property>
      <property name="nameservers" transfer-ownership="none">
        <array>
          <type name="utf8"/>
        </array>
      </property>
      <property name="nameservers-configuration"
                writable="1"
                transfer-ownership="none">
        <array>
          <type name="utf8"/>
        </array>
      </property>
      <property name="passphrase" writable="1" transfer-ownership="none">
        <type name="utf8"/>
      </property>
      <property name="passphrase-required" transfer-ownership="none">
        <type name="gboolean"/>
      </property>
      <property name="path"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8"/>
      </property>
      <property name="ready" transfer-ownership="none">
        <type name="gboolean"/>
      </property>
      <property name="roaming" transfer-ownership="none">
        <type name="gboolean"/>
      </property>
      <property name="security" transfer-ownership="none">
        <type name="guint"/>
      </property>
      <property name="setup-required" transfer-ownership="none">
        <type name="gboolean"/>
      </property>
      <property name="state" transfer-ownership="none">
        <type name="guint"/>
      </property>
      <property name="strength" transfer-ownership="none">
        <type name="guint"/>
      </property>
      <property name="type" transfer-ownership="none">
        <type name="guint"/>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="ServiceClass"
            c:type="BarmanServiceClass"
            glib:is-gtype-struct-for="Service">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="ServiceMode" c:type="BarmanServiceMode">
      <member name="managed"
              value="0"
              c:identifier="BARMAN_SERVICE_MODE_MANAGED"/>
      <member name="adhoc" value="1" c:identifier="BARMAN_SERVICE_MODE_ADHOC"/>
      <member name="gprs" value="2" c:identifier="BARMAN_SERVICE_MODE_GPRS"/>
      <member name="edge" value="3" c:identifier="BARMAN_SERVICE_MODE_EDGE"/>
      <member name="umts" value="4" c:identifier="BARMAN_SERVICE_MODE_UMTS"/>
    </enumeration>
    <enumeration name="ServiceSecurity" c:type="BarmanServiceSecurity">
      <member name="unknown"
              value="0"
              c:identifier="BARMAN_SERVICE_SECURITY_UNKNOWN"/>
      <member name="none"
              value="1"
              c:identifier="BARMAN_SERVICE_SECURITY_NONE"/>
      <member name="wep" value="2" c:identifier="BARMAN_SERVICE_SECURITY_WEP"/>
      <member name="psk" value="3" c:identifier="BARMAN_SERVICE_SECURITY_PSK"/>
      <member name="ieee8021x"
              value="4"
              c:identifier="BARMAN_SERVICE_SECURITY_IEEE8021X"/>
    </enumeration>
    <enumeration name="ServiceState" c:type="BarmanServiceState">
      <member name="idle" value="0" c:identifier="BARMAN_SERVICE_STATE_IDLE"/>
      <member name="failure"
              value="1"
              c:identifier="BARMAN_SERVICE_STATE_FAILURE"/>
      <member name="association"
              value="2"
              c:identifier="BARMAN_SERVICE_STATE_ASSOCIATION"/>
      <member name="configuration"
              value="3"
              c:identifier="BARMAN_SERVICE_STATE_CONFIGURATION"/>
      <member name="ready"
              value="4"
              c:identifier="BARMAN_SERVICE_STATE_READY"/>
      <member name="login"
              value="5"
              c:identifier="BARMAN_SERVICE_STATE_LOGIN"/>
      <member name="online"
              value="6"
              c:identifier="BARMAN_SERVICE_STATE_ONLINE"/>
      <member name="disconnect"
              value="7"
              c:identifier="BARMAN_SERVICE_STATE_DISCONNECT"/>
    </enumeration>
    <enumeration name="ServiceType" c:type="BarmanServiceType">
      <member name="ethernet"
              value="0"
              c:identifier="BARMAN_SERVICE_TYPE_ETHERNET"/>
      <member name="wifi" value="1" c:identifier="BARMAN_SERVICE_TYPE_WIFI"/>
      <member name="bluetooth"
              value="2"
              c:identifier="BARMAN_SERVICE_TYPE_BLUETOOTH"/>
      <member name="cellular"
              value="3"
              c:identifier="BARMAN_SERVICE_TYPE_CELLULAR"/>
    </enumeration>
    <constant name="TECHNOLOGY_BLUETOOTH" value="bluetooth">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TECHNOLOGY_CELLULAR" value="cellular">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TECHNOLOGY_ETHERNET" value="ethernet">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TECHNOLOGY_PROPERTY_STATE" value="State">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TECHNOLOGY_PROPERTY_TYPE" value="Type">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TECHNOLOGY_WIFI" value="wifi">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <enumeration name="TechnologyState" c:type="BarmanTechnologyState">
      <member name="unknown"
              value="0"
              c:identifier="BARMAN_TECHNOLOGY_STATE_UNKNOWN"/>
      <member name="unavailable"
              value="1"
              c:identifier="BARMAN_TECHNOLOGY_STATE_UNAVAILABLE"/>
      <member name="available"
              value="2"
              c:identifier="BARMAN_TECHNOLOGY_STATE_AVAILABLE"/>
      <member name="offline"
              value="3"
              c:identifier="BARMAN_TECHNOLOGY_STATE_OFFLINE"/>
      <member name="enabled"
              value="4"
              c:identifier="BARMAN_TECHNOLOGY_STATE_ENABLED"/>
      <member name="connected"
              value="5"
              c:identifier="BARMAN_TECHNOLOGY_STATE_CONNECTED"/>
    </enumeration>
    <enumeration name="TechnologyType" c:type="BarmanTechnologyType">
      <member name="unknown"
              value="0"
              c:identifier="BARMAN_TECHNOLOGY_TYPE_UNKNOWN"/>
      <member name="ethernet"
              value="1"
              c:identifier="BARMAN_TECHNOLOGY_TYPE_ETHERNET"/>
      <member name="wifi"
              value="2"
              c:identifier="BARMAN_TECHNOLOGY_TYPE_WIFI"/>
      <member name="bluetooth"
              value="3"
              c:identifier="BARMAN_TECHNOLOGY_TYPE_BLUETOOTH"/>
      <member name="cellular"
              value="4"
              c:identifier="BARMAN_TECHNOLOGY_TYPE_CELLULAR"/>
    </enumeration>
  </namespace>
</repository>
